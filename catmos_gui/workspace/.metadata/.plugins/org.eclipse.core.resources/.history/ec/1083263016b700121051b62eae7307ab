/*
 * 
 */
package Scenario.diagram.edit.parts;

/**
 * @generated
 */
public class ScenarioEditPartFactory implements org.eclipse.gef.EditPartFactory {

	/**
 * @generated
 */
	public org.eclipse.gef.EditPart createEditPart(org.eclipse.gef.EditPart context, Object model) {
		if (model instanceof org.eclipse.gmf.runtime.notation.View) {
			org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) model;
			switch (Scenario.diagram.part.ScenarioVisualIDRegistry.getVisualID(view)) {
				
	case Scenario.diagram.edit.parts.ScenarioEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ScenarioEditPart(view);
									
	case Scenario.diagram.edit.parts.CapabilityProvisionEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvisionEditPart(view);
					
	case Scenario.diagram.edit.parts.CapabilityProvisionNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvisionNameEditPart(view);
									
	case Scenario.diagram.edit.parts.FindTradeOffsEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.FindTradeOffsEditPart(view);
					
	case Scenario.diagram.edit.parts.FindTradeOffsNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.FindTradeOffsNameEditPart(view);
									
	case Scenario.diagram.edit.parts.ThroughLifePlanningEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ThroughLifePlanningEditPart(view);
					
	case Scenario.diagram.edit.parts.ThroughLifePlanningNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ThroughLifePlanningNameEditPart(view);
									
	case Scenario.diagram.edit.parts.CapabilityEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityEditPart(view);
					
	case Scenario.diagram.edit.parts.CapabilityNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityNameEditPart(view);
									
	case Scenario.diagram.edit.parts.QualitativeValueDictionaryEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.QualitativeValueDictionaryEditPart(view);
					
	case Scenario.diagram.edit.parts.QualitativeValueDictionaryNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.QualitativeValueDictionaryNameEditPart(view);
									
	case Scenario.diagram.edit.parts.ComponentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ComponentEditPart(view);
					
	case Scenario.diagram.edit.parts.ComponentNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ComponentNameEditPart(view);
									
	case Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.MeasurementEditPart(view);
					
	case Scenario.diagram.edit.parts.MeasurementNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.MeasurementNameEditPart(view);
									
	case Scenario.diagram.edit.parts.QualitativeValueEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.QualitativeValueEditPart(view);
					
	case Scenario.diagram.edit.parts.QualitativeValueNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.QualitativeValueNameEditPart(view);
									
	case Scenario.diagram.edit.parts.QualitativeValue2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.QualitativeValue2EditPart(view);
					
	case Scenario.diagram.edit.parts.QualitativeValueName2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.QualitativeValueName2EditPart(view);
									
	case Scenario.diagram.edit.parts.QualitativeValue3EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.QualitativeValue3EditPart(view);
					
	case Scenario.diagram.edit.parts.QualitativeValueName3EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.QualitativeValueName3EditPart(view);
									
	case Scenario.diagram.edit.parts.ExistingComponentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ExistingComponentEditPart(view);
					
	case Scenario.diagram.edit.parts.ExistingComponentNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ExistingComponentNameEditPart(view);
									
	case Scenario.diagram.edit.parts.AcquirableComponentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.AcquirableComponentEditPart(view);
					
	case Scenario.diagram.edit.parts.AcquirableComponentNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.AcquirableComponentNameEditPart(view);
									
	case Scenario.diagram.edit.parts.DesireHighEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.DesireHighEditPart(view);
					
	case Scenario.diagram.edit.parts.DesireHighNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.DesireHighNameEditPart(view);
									
	case Scenario.diagram.edit.parts.DesireLowEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.DesireLowEditPart(view);
					
	case Scenario.diagram.edit.parts.DesireLowNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.DesireLowNameEditPart(view);
									
	case Scenario.diagram.edit.parts.BudgetEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.BudgetEditPart(view);
					
	case Scenario.diagram.edit.parts.BudgetNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.BudgetNameEditPart(view);
									
	case Scenario.diagram.edit.parts.ComponentUEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ComponentUEditPart(view);
					
	case Scenario.diagram.edit.parts.ComponentUNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ComponentUNameEditPart(view);
									
	case Scenario.diagram.edit.parts.ExistingComponent2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ExistingComponent2EditPart(view);
					
	case Scenario.diagram.edit.parts.ExistingComponentName2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ExistingComponentName2EditPart(view);
									
	case Scenario.diagram.edit.parts.AcquirableComponent2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.AcquirableComponent2EditPart(view);
					
	case Scenario.diagram.edit.parts.AcquirableComponentName2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.AcquirableComponentName2EditPart(view);
									
	case Scenario.diagram.edit.parts.DesireHigh2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.DesireHigh2EditPart(view);
					
	case Scenario.diagram.edit.parts.DesireHighName2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.DesireHighName2EditPart(view);
									
	case Scenario.diagram.edit.parts.DesireLow2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.DesireLow2EditPart(view);
					
	case Scenario.diagram.edit.parts.DesireLowName2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.DesireLowName2EditPart(view);
									
	case Scenario.diagram.edit.parts.Budget2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.Budget2EditPart(view);
					
	case Scenario.diagram.edit.parts.BudgetName2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.BudgetName2EditPart(view);
									
	case Scenario.diagram.edit.parts.ComponentU2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ComponentU2EditPart(view);
					
	case Scenario.diagram.edit.parts.ComponentUName2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ComponentUName2EditPart(view);
									
	case Scenario.diagram.edit.parts.CapabilityProvision2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvision2EditPart(view);
					
	case Scenario.diagram.edit.parts.CapabilityProvisionName2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvisionName2EditPart(view);
									
	case Scenario.diagram.edit.parts.CapabilityProvision3EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvision3EditPart(view);
					
	case Scenario.diagram.edit.parts.CapabilityProvisionName3EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvisionName3EditPart(view);
									
	case Scenario.diagram.edit.parts.Capability2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.Capability2EditPart(view);
					
	case Scenario.diagram.edit.parts.CapabilityName2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityName2EditPart(view);
									
	case Scenario.diagram.edit.parts.Capability3EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.Capability3EditPart(view);
					
	case Scenario.diagram.edit.parts.CapabilityName3EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityName3EditPart(view);
									
	case Scenario.diagram.edit.parts.CapabilityUpgradeEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityUpgradeEditPart(view);
					
	case Scenario.diagram.edit.parts.CapabilityUpgradeNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityUpgradeNameEditPart(view);
									
	case Scenario.diagram.edit.parts.CapabilityChangeEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityChangeEditPart(view);
					
	case Scenario.diagram.edit.parts.CapabilityChangeNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityChangeNameEditPart(view);
									
	case Scenario.diagram.edit.parts.CapabilityProvision4EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvision4EditPart(view);
					
	case Scenario.diagram.edit.parts.CapabilityProvisionName4EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvisionName4EditPart(view);
									
	case Scenario.diagram.edit.parts.Capability4EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.Capability4EditPart(view);
					
	case Scenario.diagram.edit.parts.CapabilityName4EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityName4EditPart(view);
									
	case Scenario.diagram.edit.parts.CostEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CostEditPart(view);
					
	case Scenario.diagram.edit.parts.CostNameEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CostNameEditPart(view);
									
	case Scenario.diagram.edit.parts.Measurement2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.Measurement2EditPart(view);
					
	case Scenario.diagram.edit.parts.MeasurementName2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.MeasurementName2EditPart(view);
								
	case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.MeasurementMeasurementCriticalValuesCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.MeasurementMeasurementCriticalValuesCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.MeasurementMeasurementBenchmarkValuesCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.MeasurementMeasurementBenchmarkValuesCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.MeasurementMeasurementProvidedValuesCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.MeasurementMeasurementProvidedValuesCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.FindTradeOffsFindTradeOffsComponentsCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.FindTradeOffsFindTradeOffsComponentsCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.FindTradeOffsFindTradeOffsConstraintsCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.FindTradeOffsFindTradeOffsConstraintsCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.ThroughLifePlanningThroughLifePlanningComponentsCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ThroughLifePlanningThroughLifePlanningComponentsCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.ThroughLifePlanningThroughLifePlanningConstraintsCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ThroughLifePlanningThroughLifePlanningConstraintsCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.ComponentComponentProvidesCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ComponentComponentProvidesCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.ComponentComponentUpgradesCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ComponentComponentUpgradesCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.ComponentComponentRequiresCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ComponentComponentRequiresCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.ComponentComponentCostsCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ComponentComponentCostsCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.ComponentComponentPropertiesCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.ComponentComponentPropertiesCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment2EditPart(view);

	case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment3EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment3EditPart(view);

	case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment2EditPart(view);

	case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment3EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment3EditPart(view);

	case Scenario.diagram.edit.parts.CapabilityUpgradeCapabilityUpgradeCapabilityChangesCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityUpgradeCapabilityUpgradeCapabilityChangesCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.CapabilityChangeCapabilityChangeCapabilitiesCompartmentEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityChangeCapabilityChangeCapabilitiesCompartmentEditPart(view);

	case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment4EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment4EditPart(view);

	case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment4EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment4EditPart(view);

	case Scenario.diagram.edit.parts.MeasurementMeasurementCriticalValuesCompartment2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.MeasurementMeasurementCriticalValuesCompartment2EditPart(view);

	case Scenario.diagram.edit.parts.MeasurementMeasurementBenchmarkValuesCompartment2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.MeasurementMeasurementBenchmarkValuesCompartment2EditPart(view);

	case Scenario.diagram.edit.parts.MeasurementMeasurementProvidedValuesCompartment2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.MeasurementMeasurementProvidedValuesCompartment2EditPart(view);
									
	case Scenario.diagram.edit.parts.CapabilityAccumulationEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityAccumulationEditPart(view);
					
	case Scenario.diagram.edit.parts.WrappingLabelEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.WrappingLabelEditPart(view);

									
	case Scenario.diagram.edit.parts.CapabilityDecomposesEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityDecomposesEditPart(view);
					
	case Scenario.diagram.edit.parts.WrappingLabel2EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.WrappingLabel2EditPart(view);

									
	case Scenario.diagram.edit.parts.MeasurementAggregatesEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.MeasurementAggregatesEditPart(view);
					
	case Scenario.diagram.edit.parts.WrappingLabel3EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.WrappingLabel3EditPart(view);

									
	case Scenario.diagram.edit.parts.QualitativeValueDictionaryGreaterThanEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.QualitativeValueDictionaryGreaterThanEditPart(view);
					
	case Scenario.diagram.edit.parts.WrappingLabel4EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.WrappingLabel4EditPart(view);

									
	case Scenario.diagram.edit.parts.CapabilityUpgradeUpgradingEditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.CapabilityUpgradeUpgradingEditPart(view);
					
	case Scenario.diagram.edit.parts.WrappingLabel5EditPart.VISUAL_ID:
		return new Scenario.diagram.edit.parts.WrappingLabel5EditPart(view);

							}
		}
		return createUnrecognizedEditPart(context, model);
	}

	/**
 * @generated
 */
	 private org.eclipse.gef.EditPart createUnrecognizedEditPart(org.eclipse.gef.EditPart context, Object model) {
	 	// Handle creation of unrecognized child node EditParts here
	 	return null;
	 }

	/**
 * @generated
 */
	public static org.eclipse.gef.tools.CellEditorLocator getTextCellEditorLocator(
			org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart source) {
        if (source.getFigure() instanceof org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel)
            return new TextCellEditorLocator((org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel) source.getFigure());
        else {
            return new LabelCellEditorLocator((org.eclipse.draw2d.Label) source.getFigure());
        }
    }

	/**
 * @generated
 */
	static private class TextCellEditorLocator implements org.eclipse.gef.tools.CellEditorLocator {

		/**
 * @generated
 */
		private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel wrapLabel;

		/**
 * @generated
 */
		public TextCellEditorLocator(org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel wrapLabel) {
			this.wrapLabel = wrapLabel;
		}

		/**
 * @generated
 */
		public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getWrapLabel() {
			return wrapLabel;
		}

		/**
 * @generated
 */
		public void relocate(org.eclipse.jface.viewers.CellEditor celleditor) {
			org.eclipse.swt.widgets.Text text = (org.eclipse.swt.widgets.Text) celleditor.getControl();
			org.eclipse.draw2d.geometry.Rectangle rect = getWrapLabel().getTextBounds().getCopy();
			getWrapLabel().translateToAbsolute(rect);
			if (!text.getFont().isDisposed()) {
				if (getWrapLabel().isTextWrapOn() && getWrapLabel().getText().length() > 0) {
					rect.setSize(new org.eclipse.draw2d.geometry.Dimension(text.computeSize(rect.width, org.eclipse.swt.SWT.DEFAULT)));
				} else {
					int avr = org.eclipse.draw2d.FigureUtilities.getFontMetrics(text.getFont()).getAverageCharWidth();
					rect.setSize(new org.eclipse.draw2d.geometry.Dimension(text.computeSize(org.eclipse.swt.SWT.DEFAULT, org.eclipse.swt.SWT.DEFAULT)).expand(avr * 2, 0));
				}
			}
			if (!rect.equals(new org.eclipse.draw2d.geometry.Rectangle(text.getBounds()))) {
				text.setBounds(rect.x, rect.y, rect.width, rect.height);
			}
		}
	}

	/**
 * @generated
 */
	private static class LabelCellEditorLocator implements org.eclipse.gef.tools.CellEditorLocator {

		/**
 * @generated
 */
		private org.eclipse.draw2d.Label label;

		/**
 * @generated
 */
		public LabelCellEditorLocator(org.eclipse.draw2d.Label label) {
			this.label = label;
		}

		/**
 * @generated
 */
		public org.eclipse.draw2d.Label getLabel() {
			return label;
		}

		/**
 * @generated
 */
		public void relocate(org.eclipse.jface.viewers.CellEditor celleditor) {
			org.eclipse.swt.widgets.Text text = (org.eclipse.swt.widgets.Text) celleditor.getControl();
			org.eclipse.draw2d.geometry.Rectangle rect = getLabel().getTextBounds().getCopy();
			getLabel().translateToAbsolute(rect);
			if (!text.getFont().isDisposed()) {
				int avr = org.eclipse.draw2d.FigureUtilities.getFontMetrics(text.getFont()).getAverageCharWidth();
				rect.setSize(new org.eclipse.draw2d.geometry.Dimension(text.computeSize(org.eclipse.swt.SWT.DEFAULT, org.eclipse.swt.SWT.DEFAULT)).expand(avr * 2, 0));
			}
			if (!rect.equals(new org.eclipse.draw2d.geometry.Rectangle(text.getBounds()))) {
				text.setBounds(rect.x, rect.y, rect.width, rect.height);
			}
		}
	}
}
