	/*
 * 
 */
package Scenario.diagram.part;

	/**
 * This registry is used to determine which type of visual object should be
 * created for the corresponding Diagram, Node, ChildNode or Link represented
 * by a domain model object.
 * 
 * @generated
 */
public class ScenarioVisualIDRegistry {

		/**
 * @generated
 */
	private static final String DEBUG_KEY = "Scenario.diagram/debug/visualID";  //$NON-NLS-1$

		/**
 * @generated
 */
public static int getVisualID(org.eclipse.gmf.runtime.notation.View view) {
	if (view instanceof org.eclipse.gmf.runtime.notation.Diagram) {
		if (Scenario.diagram.edit.parts.ScenarioEditPart.MODEL_ID.equals(view.getType())) {
			return Scenario.diagram.edit.parts.ScenarioEditPart.VISUAL_ID;
		} else {
			return -1;
		}
	}
	return Scenario.diagram.part.ScenarioVisualIDRegistry.getVisualID(view.getType());
}
	
		/**
 * @generated
 */
public static String getModelID(org.eclipse.gmf.runtime.notation.View view) {
	org.eclipse.gmf.runtime.notation.View diagram = view.getDiagram();
	while (view != diagram) {
		org.eclipse.emf.ecore.EAnnotation annotation = view.getEAnnotation("Shortcut");  //$NON-NLS-1$
		if (annotation != null) {
			return (String) annotation.getDetails().get("modelID");  //$NON-NLS-1$
		}
		view = (org.eclipse.gmf.runtime.notation.View) view.eContainer();
	}
	return diagram != null ? diagram.getType() : null;
}
	
		/**
 * @generated
 */
public static int getVisualID(String type) {
	try {
		return Integer.parseInt(type);
	} catch (NumberFormatException e) {
		if (Boolean.TRUE.toString().equalsIgnoreCase(org.eclipse.core.runtime.Platform.getDebugOption(DEBUG_KEY))) {
			Scenario.diagram.part.ScenarioDiagramEditorPlugin.getInstance().logError("Unable to parse view type as a visualID number: " + type);
		}
	}
	return -1;
}

	/**
 * @generated
 */
public static String getType(int visualID) {
	return Integer.toString(visualID);
}
	
		/**
 * @generated
 */
public static int getDiagramVisualID(org.eclipse.emf.ecore.EObject domainElement) {
	if (domainElement == null) {
		return -1;
	}
	if (Scenario.ScenarioPackage.eINSTANCE.getScenario().isSuperTypeOf(domainElement.eClass()) && isDiagram((Scenario.Scenario) domainElement)) {
	return Scenario.diagram.edit.parts.ScenarioEditPart.VISUAL_ID;
}
	return -1;
}
	
		/**
 * @generated
 */
public static int getNodeVisualID(org.eclipse.gmf.runtime.notation.View containerView, org.eclipse.emf.ecore.EObject domainElement) {
	if (domainElement == null) {
		return -1;
	}
	String containerModelID = Scenario.diagram.part.ScenarioVisualIDRegistry.getModelID(containerView);
	if (!Scenario.diagram.edit.parts.ScenarioEditPart.MODEL_ID.equals(containerModelID) && !"Scenario".equals(containerModelID)) {  //$NON-NLS-1$
		return -1;
	}
	int containerVisualID;
	if (Scenario.diagram.edit.parts.ScenarioEditPart.MODEL_ID.equals(containerModelID)) {
		containerVisualID = Scenario.diagram.part.ScenarioVisualIDRegistry.getVisualID(containerView);
	} else {
		if (containerView instanceof org.eclipse.gmf.runtime.notation.Diagram) {
			containerVisualID = Scenario.diagram.edit.parts.ScenarioEditPart.VISUAL_ID;		
		} else {
			return -1;
		}
	}
	switch (containerVisualID) {
			case Scenario.diagram.edit.parts.ScenarioEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getCapabilityProvision().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.CapabilityProvisionEditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getFindTradeOffs().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.FindTradeOffsEditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getThroughLifePlanning().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.ThroughLifePlanningEditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getCapability().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.CapabilityEditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getQualitativeValueDictionary().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.QualitativeValueDictionaryEditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getComponent().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.ComponentEditPart.VISUAL_ID;
}
	break;
																																		case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getMeasurement().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.MeasurementMeasurementCriticalValuesCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getQualitativeValue().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.QualitativeValueEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.MeasurementMeasurementBenchmarkValuesCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getQualitativeValue().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.QualitativeValue2EditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.MeasurementMeasurementProvidedValuesCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getQualitativeValue().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.QualitativeValue3EditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.FindTradeOffsFindTradeOffsComponentsCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getExistingComponent().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.ExistingComponentEditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getAcquirableComponent().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.AcquirableComponentEditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getComponentU().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.ComponentUEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.FindTradeOffsFindTradeOffsConstraintsCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getDesireHigh().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.DesireHighEditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getDesireLow().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.DesireLowEditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getBudget().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.BudgetEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.ThroughLifePlanningThroughLifePlanningComponentsCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getExistingComponent().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.ExistingComponent2EditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getAcquirableComponent().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.AcquirableComponent2EditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getComponentU().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.ComponentU2EditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.ThroughLifePlanningThroughLifePlanningConstraintsCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getDesireHigh().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.DesireHigh2EditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getDesireLow().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.DesireLow2EditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getBudget().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.Budget2EditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getMeasurement().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.ComponentComponentProvidesCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getCapabilityProvision().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.CapabilityProvision2EditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getCapability().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.Capability2EditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.ComponentComponentUpgradesCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getCapabilityUpgrade().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.CapabilityUpgradeEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.ComponentComponentRequiresCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getCapabilityProvision().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.CapabilityProvision3EditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getCapability().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.Capability3EditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.ComponentComponentCostsCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getCost().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.CostEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.ComponentComponentPropertiesCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getMeasurement().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.Measurement2EditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment2EditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getMeasurement().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment3EditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getMeasurement().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment2EditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getMeasurement().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment3EditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getMeasurement().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.CapabilityUpgradeCapabilityUpgradeCapabilityChangesCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getCapabilityChange().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.CapabilityChangeEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.CapabilityChangeCapabilityChangeCapabilitiesCompartmentEditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getCapabilityProvision().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.CapabilityProvision4EditPart.VISUAL_ID;
}
if (Scenario.ScenarioPackage.eINSTANCE.getCapability().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.Capability4EditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment4EditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getMeasurement().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment4EditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getMeasurement().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.MeasurementMeasurementCriticalValuesCompartment2EditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getQualitativeValue().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.QualitativeValueEditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.MeasurementMeasurementBenchmarkValuesCompartment2EditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getQualitativeValue().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.QualitativeValue2EditPart.VISUAL_ID;
}
	break;
		case Scenario.diagram.edit.parts.MeasurementMeasurementProvidedValuesCompartment2EditPart.VISUAL_ID:
	if (Scenario.ScenarioPackage.eINSTANCE.getQualitativeValue().isSuperTypeOf(domainElement.eClass())) {
	return Scenario.diagram.edit.parts.QualitativeValue3EditPart.VISUAL_ID;
}
	break;
		}
	return -1;
}
	
		/**
 * @generated
 */
public static boolean canCreateNode(org.eclipse.gmf.runtime.notation.View containerView, int nodeVisualID) {
	String containerModelID = Scenario.diagram.part.ScenarioVisualIDRegistry.getModelID(containerView);
	if (!Scenario.diagram.edit.parts.ScenarioEditPart.MODEL_ID.equals(containerModelID) && !"Scenario".equals(containerModelID)) {  //$NON-NLS-1$
		return false;
	}
	int containerVisualID;
	if (Scenario.diagram.edit.parts.ScenarioEditPart.MODEL_ID.equals(containerModelID)) {
		containerVisualID = Scenario.diagram.part.ScenarioVisualIDRegistry.getVisualID(containerView);
	} else {
		if (containerView instanceof org.eclipse.gmf.runtime.notation.Diagram) {
			containerVisualID = Scenario.diagram.edit.parts.ScenarioEditPart.VISUAL_ID;		
		} else {
			return false;
		}
	}
	switch (containerVisualID) {
		case Scenario.diagram.edit.parts.ScenarioEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityProvisionEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.FindTradeOffsEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.ThroughLifePlanningEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.CapabilityEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.QualitativeValueDictionaryEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.ComponentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityProvisionEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityProvisionNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.FindTradeOffsEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.FindTradeOffsNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.FindTradeOffsFindTradeOffsComponentsCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.FindTradeOffsFindTradeOffsConstraintsCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ThroughLifePlanningEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.ThroughLifePlanningNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.ThroughLifePlanningThroughLifePlanningComponentsCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.ThroughLifePlanningThroughLifePlanningConstraintsCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.QualitativeValueDictionaryEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.QualitativeValueDictionaryNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ComponentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.ComponentNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.ComponentComponentProvidesCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.ComponentComponentUpgradesCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.ComponentComponentRequiresCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.ComponentComponentCostsCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.ComponentComponentPropertiesCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.MeasurementNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.MeasurementMeasurementCriticalValuesCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.MeasurementMeasurementBenchmarkValuesCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.MeasurementMeasurementProvidedValuesCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.QualitativeValueEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.QualitativeValueNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.QualitativeValue2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.QualitativeValueName2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.QualitativeValue3EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.QualitativeValueName3EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ExistingComponentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.ExistingComponentNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.AcquirableComponentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.AcquirableComponentNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.DesireHighEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.DesireHighNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.DesireLowEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.DesireLowNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.BudgetEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.BudgetNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ComponentUEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.ComponentUNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ExistingComponent2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.ExistingComponentName2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.AcquirableComponent2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.AcquirableComponentName2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.DesireHigh2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.DesireHighName2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.DesireLow2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.DesireLowName2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.Budget2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.BudgetName2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ComponentU2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.ComponentUName2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityProvision2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityProvisionName2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityProvision3EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityProvisionName3EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment3EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.Capability2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityName2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.Capability3EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityName3EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment3EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityUpgradeEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityUpgradeNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.CapabilityUpgradeCapabilityUpgradeCapabilityChangesCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityChangeEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityChangeNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.CapabilityChangeCapabilityChangeCapabilitiesCompartmentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityProvision4EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityProvisionName4EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment4EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.Capability4EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityName4EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment4EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CostEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CostNameEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.Measurement2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.MeasurementName2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.MeasurementMeasurementCriticalValuesCompartment2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.MeasurementMeasurementBenchmarkValuesCompartment2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.MeasurementMeasurementProvidedValuesCompartment2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.MeasurementMeasurementCriticalValuesCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.QualitativeValueEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.MeasurementMeasurementBenchmarkValuesCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.QualitativeValue2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.MeasurementMeasurementProvidedValuesCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.QualitativeValue3EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.FindTradeOffsFindTradeOffsComponentsCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.ExistingComponentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.AcquirableComponentEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.ComponentUEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.FindTradeOffsFindTradeOffsConstraintsCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.DesireHighEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.DesireLowEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.BudgetEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ThroughLifePlanningThroughLifePlanningComponentsCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.ExistingComponent2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.AcquirableComponent2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.ComponentU2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ThroughLifePlanningThroughLifePlanningConstraintsCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.DesireHigh2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.DesireLow2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.Budget2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ComponentComponentProvidesCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityProvision2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.Capability2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ComponentComponentUpgradesCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityUpgradeEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ComponentComponentRequiresCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityProvision3EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.Capability3EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ComponentComponentCostsCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CostEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.ComponentComponentPropertiesCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.Measurement2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment3EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment3EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityUpgradeCapabilityUpgradeCapabilityChangesCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityChangeEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityChangeCapabilityChangeCapabilitiesCompartmentEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.CapabilityProvision4EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
if (Scenario.diagram.edit.parts.Capability4EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityProvisionCapabilityProvisionMeasurementsCompartment4EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityCapabilityMeasurementsCompartment4EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.MeasurementEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.MeasurementMeasurementCriticalValuesCompartment2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.QualitativeValueEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.MeasurementMeasurementBenchmarkValuesCompartment2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.QualitativeValue2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.MeasurementMeasurementProvidedValuesCompartment2EditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.QualitativeValue3EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
		case Scenario.diagram.edit.parts.CapabilityAccumulationEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.WrappingLabelEditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityDecomposesEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.WrappingLabel2EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.MeasurementAggregatesEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.WrappingLabel3EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.QualitativeValueDictionaryGreaterThanEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.WrappingLabel4EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
case Scenario.diagram.edit.parts.CapabilityUpgradeUpgradingEditPart.VISUAL_ID:
	if (Scenario.diagram.edit.parts.WrappingLabel5EditPart.VISUAL_ID == nodeVisualID) {
	return true;
}
	break;
	}
	return false;
}
	
		/**
 * @generated
 */
public static int getLinkWithClassVisualID(org.eclipse.emf.ecore.EObject domainElement) {
	if (domainElement == null) {
		return -1;
	}
		return -1;
}
	
				/**
 * User can change implementation of this method to handle some specific
 * situations not covered by default logic.
 * 
 * @generated
 */
private static boolean isDiagram(Scenario.Scenario element) {
	return true;
}
	
	
	}
